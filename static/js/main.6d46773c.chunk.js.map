{"version":3,"sources":["data/processData.js","components/subComponents/SVGcontainer.js","components/subComponents/RosterTooltip.js","components/subComponents/Colors.js","utils/utils.js","components/subComponents/HexaVoronoi.js","components/RaceRosterHexa.js","components/subComponents/MultiLines.js","components/subComponents/Axis.js","components/subComponents/Brush.js","components/TimeLinesBrushable.js","components/subComponents/HoverRunnersLeftLayer.js","components/subComponents/RunnerStatsLayer.js","components/TimeLinesHoverable.js","components/subComponents/CumSumInfoLayer.js","components/RunnersCumSumTime.js","components/HistoTime.js","components/subComponents/Stack.js","components/Dashboard.js","components/subComponents/LazWriting.js","data/processDataLaz.js","components/LazBoard.js","App.js","index.js"],"names":["raceStartTime","time","day","arguments","length","undefined","tz","moment","concat","getRaceTime","bigsData","startTime","runnersData","data","forEach","runner","parent","bib","age","laps","lap","duration","string","as","format","fastest","reduce","current","i","asSeconds","Infinity","slowest","average","seconds","sum","numberOfLaps","processData","race","SVGcontainer","react_default","a","createElement","style","display","width","this","props","height","transform","margins","left","top","right","children","React","PureComponent","RosterTooltip","node","xShift","x","r","yShift","y","depth","textAnchor","alignmentBaseline","fontSize","fontWeight","firstName","lastName","colorsSelected","colorsHash","M","F","hoveredFill","cScale","linesColorScale","d3scaleLinear","domain","map","c","range","isSelected","selectedBibs","id","isHovered","hoveredBib","getMax","array","attr","Math","max","apply","Object","toConsumableArray","d","dayOrNight","floor","cellLiner","line","getRunnerCell","polygon","fill","strokeColor","strokeWidth","opacity","onHover","onClick","site","originalObject","originalData","className","key","onMouseMove","onMouseOut","onMouseLeave","_ref","_ref2","slicedToArray","stroke","substring","sqrt","weight","HexaVoronoi","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","simulated","polygons","computePolygons","bind","assertThisInitialized","_this$props","w","h","bottom","seedRng","seedrandom","simulation","voronoiMapSimulation","clip","hexRadius","min","Array","p","angle_deg","angle_rad","PI","cos","sin","computeHexaClip","prng","stop","ended","tick","setState","_this$props2","hoveredRunner","selectedRunners","runners","tooltip","isNodeSelected","isNodeHovered","colorStroke","colorFill","gender","addTooltip","push","subComponents_RosterTooltip","allRunners","Component","RaceRoster","subComponents_SVGcontainer","subComponents_HexaVoronoi","dy","s","cx","cy","getRunnerPath","path","color","MultiLines","timeLines","xScale","yScale","colorScale","d3line","asMinutes","curve","d3curveCatmullRom","alpha","keys","nonSelected","selected","hovered","isRunnerSelected","clipPath","Axis","myAxis","createRef","orientation","drawAxis","axis","d3axisLeft","scale","d3axisBottom","d3select","rotate","ref","label","showLabel","text","brushed","callback","d3event","selection","invert","Brush","myBrush","leftLine","rightLine","updateHandles","lowerLim","upperLim","setAttribute","_d3event$selection","_this2","_this$props$dataLimit","dataLimits","_this$props$dataLimit2","brush","d3brushX","extent","handleSize","on","onBrush","move","y1","y2","d3symbol","type","d3symbolTriangle","size","TimeLinesBrushable","innerWidth","innerHeight","subComponents_Axis","subComponents_MultiLines","subComponents_Brush","HoverRunnersLeftLayer","mouseX","mouseY","visible","e","bounds","target","getBoundingClientRect","clientX","clientY","survivors","currentLap","selectedRunnersInfo","acc","selectedRunner","runnerLap","filter","x1","x2","getStyle","toFixed","info","pointerEvents","onMouseOver","RunnerStatsLayer","stats","runnerData","fastestX","fastestY","slowestX","slowestY","averageY","strokeDasharray","TimeLinesHoverable","xRange","xScaleRange","subComponents_RunnerStatsLayer","subComponents_HoverRunnersLeftLayer","CumSumInfoLayer","cumSum","runTime","RunnersCumSumTime","isSelectedRunner","cumRunTime","clone","add","limitTime","restTime","subtract","getCumulativeTimesFor","asHours","convertToHours","timeLoopLimit","lineTime","lineLimit","subComponents_CumSumInfoLayer","HistoTime","d3curveBasis","binRects","allBins","allLaps","allDensities","kernel","X","lapTimes","getTimesAsMinutes","d3extent","bins","d3histogram","thresholds","ticks","binsGenerator","yScaleMax","d3max","binMaxLength","curr","densityKernel","drawKernelDensity","k","f","v","abs","kernelEpanechnikov","V","d3mean","bin","x0","drawHisto","Stack","startingList","startingItems","items","slice","createClass","value","element","pop","join","Dashboard","brushedLaps","colorStack","onHoverBib","onBrushLaps","onClickBib","filtered","obj","objectSpread","defineProperty","newSelection","lapsRange","RaceRosterHexa","components_RunnersCumSumTime","components_TimeLinesHoverable","components_TimeLinesBrushable","components_HistoTime","LazWriting","story","formatTime","whiteSpace","margin","entry","processDataLaz","timelineConfig","minEventPadding","maxEventPadding","linePadding","labelWidth","fillingMotionStiffness","fillingMotionDamping","slidingMotionStiffness","slidingMotionDamping","stylesBackground","stylesForeground","stylesOutline","isTouchEnabled","isKeyboardEnabled","isOpenEnding","isOpenBeginning","getLabel","date","views","lazData","index","subComponents_LazWriting","LazBoard","item","previous","onChangeView","justifyContent","flexDirection","alignItems","marginTop","react_horizontal_timeline_default","indexClick","values","fillingMotion","stiffness","damping","slidingMotion","styles","background","foreground","outline","marginLeft","lib_default","onChangeIndex","resistance","App","variable","HashRouter","Navbar_default","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","Nav_default","Link","to","Text","Switch","Route","exact","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6d46773c.chunk.js","sourcesContent":["\nimport moment from 'moment';\nimport bigsData from './bigsData.json'\n\n\nconst getRaceTime = (time, day=\"21 Oct 2017\", tz=\"CDT\") => {\n  return moment(`${day} ${time} ${tz}`)\n}\n\n// parse race start time\nconst raceStartTime = getRaceTime(bigsData.startTime)\n\n// parse runners laps time\nconst runnersData = bigsData.data\nrunnersData.forEach(runner => {\n  runner.parent = \"roster\"\n  runner.bib = +runner.bib\n  runner.runner.age = +runner.runner.age\n  runner.laps.forEach(lap => {\n    lap.time = moment.duration(`00:${lap.time}`)\n    lap.string = moment(lap.time.as('milliseconds')).format('mm:ss')\n  })\n  \n  // add some stats for runner\n  runner.fastest = runner.laps.reduce((fastest, current, i) => {\n    return current.time.asSeconds() < fastest.time.asSeconds()\n      ? {time: current.time, lap: i+1, string: moment(current.time.as('milliseconds')).format('mm:ss')}\n      : fastest\n  }, {time: moment.duration(Infinity), lap: 0})\n  \n  runner.slowest = runner.laps.reduce((slowest, current, i) => {\n    return current.time.asSeconds() > slowest.time.asSeconds() \n      ? {time: current.time, lap: i+1, string: moment(current.time.as('milliseconds')).format('mm:ss')}\n      : slowest\n  }, {time: moment.duration(0), lap: 0})\n  \n  runner.average = {time: moment.duration(\n    {seconds: runner.laps.reduce((sum, current) => {\n      sum += current.time.asSeconds()\n      return sum\n      }, 0\n      )/runner.numberOfLaps\n    })\n  }\n  runner.average.string = moment(runner.average.time.as('milliseconds')).format('mm:ss')\n})\n\nexport default {\n  race: \"Big Backyard Ultra\",\n  time: raceStartTime,\n  data: runnersData\n};\n","import React from 'react';\n\nclass SVGcontainer extends React.PureComponent {\n  render() {\n    return (\n      <div style={{display: 'inline-block'}}>\n        <svg width={this.props.width} height={this.props.height}>\n          <g transform = {`translate(${this.props.margins.left}, ${this.props.margins.top})`}\n             width = {this.props.width - this.props.margins.left - this.props.margins.right}\n             height = {this.props.height - this.props.margins.left - this.props.margins.top}\n          >\n            {this.props.children}\n          </g>\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default SVGcontainer","import React from 'react';\n\nconst RosterTooltip = (props) => {\n  const {node, width} = props\n  const xShift = (node.x < width-100)\n    ? node.x + node.r + 10\n    : node.x - node.r - 10\n  const yShift = node.y < 70 \n    ? node.y + node.r + 70\n    : node.y\n  return ((node.depth !==0) &&\n    <g transform = {`translate(${xShift}, ${yShift})`}>\n      <text\n        y={`-${35+node.r}px`}\n        style={{\n          textAnchor: 'middle', \n          alignmentBaseline: \"central\",\n          fontSize: \"20px\",\n          fontWeight: \"bold\"}}\n      >{`${node.data.runner.firstName}`}\n      </text>\n      <text\n        y={`-${15+node.r}px`}\n        style={{\n          textAnchor: 'middle', \n          alignmentBaseline: \"central\",\n          fontSize: \"20px\",\n          fontWeight: \"bold\"}}\n      >{`${node.data.runner.lastName}`}\n      </text>\n    </g>\n  \n  );\n}\n\nexport default RosterTooltip","import {scaleLinear as d3scaleLinear} from 'd3-scale';\n\nexport const colorsSelected = [\n  \"#999999\",\n  \"#f781bf\",\n  \"#a65628\",\n  \"#ff7f00\",\n  \"#984ea3\",\n  \"#377eb8\",\n  \"#e41a1c\"\n]\n\nexport const colorsHash = {\n  M: '#aad28c',//'#cbdbff',//'#aad28c',\n  F: '#ffc38a',\n  hoveredFill: \"#49ABF3\"\n}\n\nlet cScale = [\"#F95B34\", \"#EE3E64\", \"#F36283\", \"#FF9C34\", \"#EBDE52\", \"#B7D84B\", \"#44ACCF\"]\nexport const linesColorScale = d3scaleLinear()\n  .domain(cScale.map((c,i) => i/cScale.length))\n  .range(cScale)","export const isSelected = (runner, selectedBibs, node=false) => !node ? selectedBibs[`${runner.bib}`] : selectedBibs[runner.id]\n\nexport const isHovered = (node, hoveredBib) => node.id === hoveredBib\n\nexport const getMax = (array, attr) => Math.max(...array.map(d => d[attr]))\n\nexport const dayOrNight = (lap) => Math.floor((lap-1)/12)%2 === 0 ? \"🏞️\" : \"🌃\"\n\n\n","import React from 'react';\n\nimport RosterTooltip from './RosterTooltip.js'\nimport {colorsHash} from './Colors.js'\nimport { isSelected, isHovered } from '../../utils/utils.js'\n\nimport { voronoiMapSimulation } from 'd3-voronoi-map'\nimport { line } from 'd3-shape'\n\nimport seedrandom from 'seedrandom'\n\n\nconst computeHexaClip = (width, height) => {\n  const hexRadius = Math.min(width, height)/2\n\n  const hexagonPoly = [...new Array(6)].map((p,i) => {\n    const angle_deg = 60 * i - 30\n    const angle_rad = Math.PI / 180 * angle_deg\n    return {x: width/2 + hexRadius * Math.cos(angle_rad),\n            y: height/2 + hexRadius * Math.sin(angle_rad)}\n  })\n  return hexagonPoly\n}\n\nconst cellLiner = line()\n  .x(d => d[0])\n  .y(d => d[1]);\n\n\nconst getRunnerCell = (polygon, isHovered, fill, strokeColor, strokeWidth, opacity, onHover, onClick) => {\n  // console.log(isHovered)\n  const runner = polygon.site.originalObject.data.originalData\n  return (\n    <g transform={`translate(${polygon.site.x}, ${polygon.site.y})`} \n      className=\"voronoiCell\"\n      key = {`vorocell-${runner.bib}`} \n      onMouseMove={() => onHover(`${runner.bib}`)}\n      onMouseOut={() => onHover(null)}\n      onMouseLeave={() => onHover(null)}\n      onClick={() => onClick(runner.bib)}\n      opacity = {opacity}\n    >\n      <path \n        d={`${cellLiner(polygon.map(([x,y])=>[x-polygon.site.x,y-polygon.site.y]))}z`}\n        fill = {fill}\n        stroke = {strokeColor}\n        strokeWidth = {strokeWidth}\n      />\n      {(!isHovered) &&\n        <text \n          style={{\n            textAnchor: 'middle', \n            alignmentBaseline: \"central\",\n            fontSize: \"10px\"\n        }}>\n         {runner.runner.firstName.substring(0, Math.sqrt(polygon.site.weight)/3.5)} \n        </text>\n      }\n    </g>\n  )\n}\n\nclass HexaVoronoi extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      simulated: false,\n      polygons: []\n    }\n    this.computePolygons = this.computePolygons.bind(this)\n  }\n\n  componentWillMount(){\n    const {runnersData, width, height, margins} = this.props\n    const w = width - margins.left - margins.right,\n          h = height - margins.top - margins.bottom\n    this.computePolygons(runnersData, w, h)\n  }\n\n  computePolygons(data, width, height){\n    const seedRng = seedrandom('lastone')\n    const simulation = voronoiMapSimulation(data)\n      .weight(d => d.numberOfLaps)\n      .clip(computeHexaClip(width, height).map(d => [d.x, d.y]))\n      .prng(seedRng)\n      .stop();\n    \n    let state = simulation.state();\n     \n    while (!state.ended) {\n      simulation.tick();\n      state = simulation.state();\n    }\n     \n    const polygons = state.polygons;\n\n    this.setState({simulated: true, polygons: polygons}) \n  }\n\n  render(){\n\n  const {margins, hoveredBib, selectedBibs, onHover, onClick} = this.props\n\n  const width = this.props.width - margins.left - margins.right,\n        height = this.props.height - margins.top - margins.bottom\n\n  \n  const polygons = this.state.polygons\n\n  let hoveredRunner = [],\n      selectedRunners = [],\n      runners = [],\n      tooltip = []\n\n  polygons.forEach(p => {\n    const runner = p.site.originalObject.data.originalData\n    const isNodeSelected = isSelected(runner, selectedBibs, false)\n    const isNodeHovered = isHovered({id: `${runner.bib}`}, hoveredBib)\n\n    let colorStroke = \"black\"\n    if (isNodeSelected) {\n      colorStroke = isNodeSelected\n    }\n\n    if (isNodeSelected) {\n      \n      let colorFill = colorsHash[runner.runner.gender]\n      let addTooltip = false\n      if (isNodeHovered){\n        colorFill = colorsHash[\"hoveredFill\"]\n        addTooltip = true\n      }\n\n      selectedRunners.push(\n        getRunnerCell(\n          p, isNodeHovered, \n          colorFill,\n          colorStroke,\n          isNodeSelected ? 4 : 1, \n          1, onHover, onClick\n        )\n      )\n\n      if (addTooltip) {\n        tooltip.push(\n          <RosterTooltip node={{depth: 1, x: p.site.x, y: p.site.y, r: Math.sqrt(p.site.weight), data: runner}} key={`tooltip-${runner.bib}`}/>\n        )\n      } \n\n    } else if (isNodeHovered) {\n      hoveredRunner.push(\n        getRunnerCell(\n          p, isNodeHovered, \n          colorsHash[\"hoveredFill\"],\n          colorStroke,\n          isNodeSelected ? 4 : 1, \n          1, onHover, onClick\n        )\n      )\n      tooltip.push(\n        <RosterTooltip node={{depth: 1, x: p.site.x, y: p.site.y, r: Math.sqrt(p.site.weight), data: runner}} width={width} key={`tooltip-${runner.bib}`}/>\n      )\n    } else {\n      runners.push(\n        getRunnerCell(\n          p, isNodeHovered, \n          colorsHash[runner.runner.gender], \n          colorStroke,\n          isNodeSelected ? 4 : 1, \n          hoveredBib ? 0.3 : 1,\n          onHover, onClick\n        )\n      )\n    }\n  })\n\n  const allRunners = [...runners, ...selectedRunners, ...hoveredRunner, ...tooltip]\n\n  return (\n    <g>\n      <rect \n        x={0}\n        y={0}\n        width={width}\n        height={height}\n        fill={'red'}\n        opacity={0}\n        onMouseMove={() => onHover(null)}\n      />\n      {allRunners}    \n    </g>\n  );\n  }\n}\n\nexport default HexaVoronoi\n","import React from 'react';\nimport SVGcontainer from './subComponents/SVGcontainer.js';\nimport HexaVoronoi from './subComponents/HexaVoronoi.js'\n\nimport {colorsHash} from './subComponents/Colors.js'\n\nconst RaceRoster = (props) =>{\n  const {runnersData, width, height, margins, hoveredBib, selectedBibs, onHover, onClick} = props\n\n  return (\n    <SVGcontainer width={width} height={height} margins={margins}>\n      <text x={5} y={20}>Roster</text>\n      <HexaVoronoi\n        width = {width}\n        height = {height}\n        margins = {margins}\n        runnersData = {runnersData}\n        hoveredBib = {hoveredBib}\n        selectedBibs = {selectedBibs}\n        onHover = {onHover}\n        onClick = {onClick}\n      />\n      <g transform={`translate(${0},${0.8*height})`} onMouseMove={() => onHover(null)}>\n        <rect x={0} y={0} width={10} height={10} stroke={'black'}  fill={colorsHash['F']} />\n        <rect x={0} y={15} width={10} height={10} stroke={'black'} fill={colorsHash['M']} />\n        <text x={15} y={0+5} dy={'0.32em'}>Female</text>\n        <text x={15} y={15+5} dy={'0.32em'}>Male</text>\n      </g>\n      <g transform={`translate(${0.62*width},${0.85*height})`} onMouseMove={() => onHover(null)}>\n        {[150, 75, 30, 10].map((s,i) => \n          <circle \n            cx={0} cy={Math.sqrt(59)-Math.sqrt(s)} r={Math.sqrt(s)} \n            stroke={'black'}  fill={'lightgray'} key={`c-${i}`} />)}\n        <text x={15} y={0} dy={'-0.3em'}>Number of</text>\n        <text x={15} y={15} dy={'-0.3em'}>laps</text>\n      </g>\n    </SVGcontainer>\n  )\n}\n\nexport default RaceRoster\n","import React from 'react';\nimport {line as d3line,\n        curveCatmullRom as d3curveCatmullRom} from 'd3-shape';\nimport { isHovered, isSelected } from '../../utils/utils.js'\n\nconst getRunnerPath = (runner, path, color, strokeWidth, opacity) => {\n  return <path \n            d={path}\n            fill='None'\n            stroke = {color}\n            strokeWidth = {strokeWidth}\n            opacity = {opacity}\n            key={`runner${runner.bib}`}\n          />\n}\n\nconst MultiLines = (props) => {\n\n  const {data, xScale, yScale, colorScale, hoveredBib, selectedBibs} = props      \n  \n  const line = d3line()\n    .x(d => xScale(d.lap))\n    .y(d => yScale(d.time.asMinutes()))\n    .curve(d3curveCatmullRom.alpha(0.5))\n\n  let timeLines\n\n  if (!Object.keys(selectedBibs).length) {\n    // If no selection, draw timeLines of all runners in colors\n    // add hovered runner in black on top\n    const nonSelected = [],\n          hovered = []\n\n    data.forEach(runner => {\n      const isRunnerHovered = isHovered({id: `${runner.bib}`}, hoveredBib)\n      if (isRunnerHovered) {\n        hovered.push(getRunnerPath(runner, line(runner.laps), 'black', 2, 1))\n      } else {\n        nonSelected.push(getRunnerPath(runner, line(runner.laps), colorScale(runner.numberOfLaps), 1, 1))\n      }\n    })\n\n    timeLines = [...nonSelected, ...hovered]\n  \n  } else {\n    // draw non selected runners in gray\n    // add selected runners in color on top\n    // add hovered runner in black on top\n    const nonSelected = [],\n          selected = [],\n          hovered = []\n\n    data.forEach(runner => {\n      const isRunnerSelected = isSelected(runner, selectedBibs)\n      const isRunnerHovered = isHovered({id: `${runner.bib}`}, hoveredBib)\n      if (isRunnerHovered) {\n        hovered.push(getRunnerPath(runner, line(runner.laps), 'black', 2, 1))\n      } else if (isRunnerSelected) {\n        selected.push(getRunnerPath(runner, line(runner.laps), isRunnerSelected, 2, 1))\n      } else {\n        nonSelected.push(getRunnerPath(runner, line(runner.laps), 'gray', 1, 0.3))\n      }\n    })\n\n    timeLines = [...nonSelected, ...selected, ...hovered]\n  }\n\n  return (\n    <g clipPath = {\"url(#multilineClip)\"}>\n      {timeLines}        \n    </g>\n  );\n}\n\nexport default MultiLines\n","import React from 'react';\nimport { axisLeft as d3axisLeft,\n         axisBottom as d3axisBottom } from 'd3-axis'\nimport { select as d3select } from 'd3-selection'\n\n\nclass Axis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myAxis = React.createRef();\n    this.orientation = this.props.orientation;\n    this.drawAxis = this.drawAxis.bind(this)\n  }\n\n  drawAxis(){\n    const axis = this.orientation === \"left\" \n      ? d3axisLeft(this.props.scale) \n      : d3axisBottom(this.props.scale)\n\n    d3select(this.myAxis.current)\n      .call(axis)\n  }\n\n  componentDidUpdate() {\n    this.drawAxis()\n  }\n\n  componentDidMount() {\n    this.drawAxis()\n  }\n\n  render() {\n\n    const rotate = this.orientation === \"left\"\n      ? \" rotate(-90)\"\n      : \"\"\n    \n    return <g transform={`translate(${this.props.left}, ${this.props.top})`}>\n              <g ref={this.myAxis}></g>\n              {this.props.label && this.props.label.showLabel &&\n               <text transform={`translate(${this.props.label.left}, ${this.props.label.top})${rotate}`} style={{textAnchor: \"middle\"}}>\n                 {this.props.label.text}\n               </text>\n              }\n           </g>\n  }\n}\n\nexport default Axis\n","import React from 'react';\n\nimport {brushX as d3brushX} from 'd3-brush';\nimport {select as d3select,\n        event as d3event} from 'd3-selection';\nimport {symbol as d3symbol,\n        symbolTriangle as d3symbolTriangle} from 'd3-shape'\n\nconst brushed = (scale, callback) => {\n  if (d3event && d3event.selection) {\n    const range = d3event.selection.map(d => scale.invert(d))\n    callback(range) \n  }\n}\n\nclass Brush extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.myBrush = React.createRef();\n    this.leftLine = React.createRef();\n    this.rightLine = React.createRef();\n    this.updateHandles = this.updateHandles.bind(this)\n  }\n\n  updateHandles (lowerLim, upperLim) {\n    this.leftLine.current.setAttribute(\"transform\", `translate(${lowerLim}, 0)`)\n    this.rightLine.current.setAttribute(\"transform\", `translate(${upperLim}, 0)`)\n  }\n\n  componentDidUpdate() {\n    if (d3event) {\n      const [lowerLim, upperLim] = d3event.selection\n      this.updateHandles(lowerLim, upperLim)\n    }\n\n  }\n\n  componentDidMount() {\n    \n    const [lowerLim, upperLim] = this.props.dataLimits.map(d => this.props.scale(d))\n\n    this.updateHandles(lowerLim, upperLim)\n\n    const brush = d3brushX()\n      .extent([[0, 0], [this.props.width, this.props.height]])\n      .handleSize(20)\n      .on(\"start brush\", () => brushed(this.props.scale, this.props.onBrush))\n      .on(\"end brush\", () => brushed(this.props.scale, this.props.onBrush))\n\n    d3select(this.myBrush.current)\n      .call(brush)\n      .call(brush.move, [lowerLim, upperLim])\n  }\n\n  render() {\n\n    return <g>\n            <g ref={this.leftLine}>\n              <line y1={0} y2={this.props.height} stroke={\"#7A7A7A\"} strokeWidth={5}/>\n              <path transform={`translate(${-6}, ${this.props.height/2}) rotate(-90)`} \n                    d = {d3symbol().type(d3symbolTriangle).size(90)()} \n                    fill = {\"#7A7A7A\"}\n              />\n            </g>\n            <g ref={this.rightLine}>\n              <line y1={0} y2={this.props.height} stroke={\"#7A7A7A\"} strokeWidth={5}/>\n              <path transform={`translate(${6}, ${this.props.height/2}) rotate(90)`} \n                    d = {d3symbol().type(d3symbolTriangle).size(90)()} \n                    fill = {\"#7A7A7A\"}\n              />\n            </g>\n            <g ref={this.myBrush}></g>\n           </g>\n  \n  }\n}\n\nexport default Brush\n","import React from 'react';\nimport SVGcontainer from './subComponents/SVGcontainer.js';\nimport MultiLines from './subComponents/MultiLines.js';\nimport Axis from './subComponents/Axis.js';\nimport Brush from './subComponents/Brush.js'\nimport {linesColorScale} from './subComponents/Colors.js'\n\nimport {scaleLinear as d3scaleLinear} from 'd3-scale';\nimport { getMax } from '../utils/utils.js'\n\nconst TimeLinesBrushable = (props) => {\n  const {data, width, height, margins, hoveredBib, selectedBibs, onBrush} = props\n\n  const innerWidth = width-margins.left-margins.right,\n        innerHeight = height-margins.top-margins.bottom\n\n  const xScale = d3scaleLinear().domain([0, getMax(data, \"numberOfLaps\")+1]).range([0, innerWidth])\n  const yScale = d3scaleLinear().domain([32, 60]).range([innerHeight, 0])\n  const colorScale = d3scaleLinear()\n    .domain(linesColorScale.domain().map(d => d*getMax(data, \"numberOfLaps\")))\n    .range(linesColorScale.range())\n\n  return (\n    <SVGcontainer width={width} height={height} margins={margins}>\n      <Axis \n        left = {0}\n        top = {innerHeight}\n        label = {{ left: innerWidth/2 , \n                   top: 30, \n                   text: \"Laps\",\n                   showLabel: true\n                 }}\n        scale = {xScale}\n        orientation = \"bottom\"\n      />\n      <MultiLines\n        data = {data}\n        xScale = {xScale}\n        yScale = {yScale}\n        colorScale = {colorScale}\n        hoveredBib = {hoveredBib}\n        selectedBibs = {selectedBibs}\n      />\n      <Brush \n        width={innerWidth}\n        height={innerHeight}\n        dataLimits = {[1, 59]}\n        scale = {xScale}\n        onBrush = {onBrush}\n      />\n    </SVGcontainer>\n  );\n}\n\nexport default TimeLinesBrushable","import React from 'react';\nimport { dayOrNight, isSelected } from '../../utils/utils.js'\n\nclass HoverRunnersLeftLayer extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      visible: false\n    }\n\n    this.onMouseMove = this.onMouseMove.bind(this)\n    this.onMouseLeave = this.onMouseLeave.bind(this)\n  }\n\n  onMouseMove(e){\n    const bounds = e.target.getBoundingClientRect()\n    const x = e.clientX - bounds.left,\n          y = e.clientY - bounds.top;\n    this.setState( {mouseX: x, mouseY: y, visible: true})\n  }\n\n  onMouseLeave(e){ \n    this.setState( {visible: false})\n  }\n\n  getStyle() {\n   return {\n    display: this.state.visible ? null : \"none\",\n   }\n  }\n\n  render(){\n\n    const {width, height, data, xScale, yScale, selectedBibs} = this.props\n\n    const survivors = data.reduce((sum, runner) => {\n      sum += runner.numberOfLaps >= xScale.invert(this.state.mouseX)\n      return sum\n      }, 0)\n\n    const currentLap = Math.floor(xScale.invert(this.state.mouseX))+1\n\n    const selectedRunnersInfo = data\n      .reduce((acc, runner) => {\n        const selectedRunner = isSelected(runner, selectedBibs)\n        if (selectedRunner) {\n          const runnerLap = runner.laps.filter(lap => lap.lap === currentLap)\n            .map(lap => (\n              {\n                x: xScale(lap.lap),\n                y: yScale(lap.time.asMinutes()),\n                string: lap.string,\n                color: selectedRunner\n              }\n            ))\n          acc = [...acc, ...runnerLap]\n        }\n        return acc\n      }, [])\n\n    return (\n      <g>\n        <line stroke = \"black\" strokeWidth= \"2px\" \n              x1={this.state.mouseX} x2={this.state.mouseX} \n              y1={0} y2={height} style={this.getStyle()}\n        />\n        <text \n          x={this.state.mouseX <= width/2 ? this.state.mouseX + 10 : this.state.mouseX - 10} \n          y={height-30} \n          textAnchor = {this.state.mouseX <= width/2 ? \"start\" : \"end\"} \n          style={this.getStyle()}>\n            {`Lap ${currentLap} ${dayOrNight(currentLap)} (${(currentLap*4.16666).toFixed(2)}mi)`}\n        </text>\n        <text \n          x={this.state.mouseX <= width/2 ? this.state.mouseX + 10 : this.state.mouseX - 10} \n          y={height-10} \n          textAnchor = {this.state.mouseX <= width/2 ? \"start\" : \"end\"} \n          style={this.getStyle()}>\n            {`${survivors} runners survived`}\n        </text>\n        {selectedRunnersInfo\n          .map((info, i) => (\n            <g key={`info-${i}`} style={this.getStyle()}>\n              <circle \n                cx = {info.x} \n                cy = {info.y} \n                fill = {info.color}\n                stroke = {\"black\"} \n                r = {3}\n              />\n              <text \n                x = {info.x + 10} \n                y = {info.y - 10} \n              >\n                {info.string}\n              </text>\n            </g>\n          ))\n        }\n        <rect width={width} height={height} fill=\"none\" pointerEvents=\"all\" \n          onMouseMove = {this.onMouseMove}\n          onMouseOver = {this.onMouseMove} \n          onMouseLeave = {this.onMouseLeave}\n        />\n      </g>\n    )\n  }\n}\n\nexport default HoverRunnersLeftLayer","import React from 'react';\n\nconst RunnerStatsLayer = (props) => {\n  const {width, xScale, yScale, data, hoveredBib} = props\n\n  let stats = null\n  if (hoveredBib && hoveredBib !== \"roster\") {\n    const runnerData = data.filter(runner => runner.bib === +hoveredBib)[0]\n\n    stats = {\n      fastestX: xScale(runnerData.fastest.lap),\n      fastestY: yScale(runnerData.fastest.time.asMinutes()),\n      fastest: runnerData.fastest.string,\n      slowestX: xScale(runnerData.slowest.lap),\n      slowestY: yScale(runnerData.slowest.time.asMinutes()),\n      slowest: runnerData.slowest.string,\n      averageY: yScale(runnerData.average.time.asMinutes()),\n      average: runnerData.average.string\n    }\n  }\n\n  return (\n      (stats) && (\n        <g>\n          <g clipPath = {\"url(#multilineClip)\"}>\n            <circle cx={stats.fastestX} cy={stats.fastestY} r={5} fill=\"red\" stroke={\"black\"}/>\n                  <text x={stats.fastestX} y={stats.fastestY + 20} textAnchor=\"start\">\n              {`${stats.fastest}`}\n            </text>\n            <circle cx={stats.slowestX} cy={stats.slowestY} r={5} fill=\"blue\" stroke={\"black\"}/>\n            <text x={stats.slowestX} y={stats.slowestY - 10} textAnchor=\"start\">\n              {`${stats.slowest}`}\n            </text>\n            <line x1={0} x2={width} y1={stats.averageY} y2={stats.averageY} \n              stroke={\"black\"} strokeDasharray=\"4 2\"/>\n          </g>\n          <text x={width} y={stats.averageY} textAnchor=\"start\" alignmentBaseline=\"middle\">\n            {`${stats.average}`}\n          </text>\n        </g>\n      )\n  )\n}\n\nexport default RunnerStatsLayer","import React from 'react';\nimport SVGcontainer from './subComponents/SVGcontainer.js';\nimport MultiLines from './subComponents/MultiLines.js';\nimport Axis from './subComponents/Axis.js';\nimport HoverRunnersLeftLayer from './subComponents/HoverRunnersLeftLayer.js'\nimport RunnerStatsLayer from './subComponents/RunnerStatsLayer.js'\nimport {linesColorScale} from './subComponents/Colors.js'\n\nimport {scaleLinear as d3scaleLinear} from 'd3-scale';\nimport { getMax } from '../utils/utils.js'\n\n\nconst TimeLinesHoverable = (props) => {\n  const {data, width, height, margins, hoveredBib, xRange, selectedBibs} = props\n\n  const innerWidth = width-margins.left-margins.right,\n        innerHeight = height-margins.top-margins.bottom\n\n  const xScaleRange = xRange ? xRange : [0, getMax(data, \"numberOfLaps\")+1]\n\n  const xScale = d3scaleLinear().domain(xScaleRange).range([0, innerWidth])\n  const yScale = d3scaleLinear().domain([32, 60]).range([innerHeight, 0])\n  const colorScale = d3scaleLinear()\n    .domain(linesColorScale.domain().map(d => d*getMax(data, \"numberOfLaps\")))\n    .range(linesColorScale.range())\n  \n  return (\n    <SVGcontainer width={width} height={height} margins={margins}>\n      <defs>\n        <clipPath id=\"multilineClip\">\n          <rect x={0} y={-margins.top} width={innerWidth} height={margins.top+innerHeight}></rect>\n        </clipPath>\n      </defs>\n      <Axis \n        left = {0}\n        top = {0}\n        label = {{ left: -30 , \n                   top: innerHeight/2 , \n                   text: \"Lap time (min)\",\n                   showLabel: true\n                 }}\n        scale = {yScale}\n        orientation = \"left\"\n      />\n      <Axis \n        left = {0}\n        top = {innerHeight}\n        label = {{ left: innerWidth/2 , \n                   top: 30, \n                   text: \"Laps\",\n                   showLabel: false\n                 }}\n        scale = {xScale}\n        orientation = \"bottom\"\n      />\n      <MultiLines \n        data = {data}\n        xScale = {xScale}\n        yScale = {yScale}\n        colorScale = {colorScale}\n        hoveredBib = {hoveredBib}\n        selectedBibs = {selectedBibs}\n      />\n      <RunnerStatsLayer \n        width = {innerWidth} \n        xScale = {xScale}\n        yScale = {yScale}\n        data = {data}\n        hoveredBib = {hoveredBib}\n      />\n      <HoverRunnersLeftLayer \n        width = {innerWidth} \n        height = {innerHeight}\n        data = {data}\n        xScale = {xScale} \n        yScale = {yScale}\n        selectedBibs = {selectedBibs}\n      />\n    </SVGcontainer>\n  );\n}\n\nexport default TimeLinesHoverable","import React from 'react';\nimport { isSelected, dayOrNight } from '../../utils/utils.js'\n\nclass CumSumInfoLayer extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      visible: false\n    }\n\n    this.onMouseMove = this.onMouseMove.bind(this)\n    this.onMouseLeave = this.onMouseLeave.bind(this)\n  }\n\n  onMouseMove(e){\n    const bounds = e.target.getBoundingClientRect()\n    const x = e.clientX - bounds.left,\n          y = e.clientY - bounds.top;\n    this.setState( {mouseX: x, mouseY: y, visible: true})\n  }\n\n  onMouseLeave(e){\n    this.setState( {visible: false})\n  }\n\n  getStyle() {\n   return {\n    display: this.state.visible ? null : \"none\",\n   }\n  }\n\n  render(){\n\n    const {width, height, data, xScale, yScale, selectedBibs} = this.props\n\n    const currentLap = Math.floor(xScale.invert(this.state.mouseX))+1\n\n    const selectedRunnersInfo = data\n      .reduce((acc, runner) => {\n        const selectedRunner = isSelected(runner, selectedBibs)\n        if (selectedRunner) {\n          const runnerLap = runner.cumSum.filter(lap => lap.lap === currentLap)\n            .map(lap => (\n              {\n                x: xScale(lap.lap),\n                y: yScale(lap.runTime),\n                color: selectedRunner\n              }\n            ))\n          acc = [...acc, ...runnerLap]\n        }\n        return acc\n      }, [])\n\n    return (\n      <g>\n        <line stroke = \"black\" strokeWidth= \"2px\" \n              x1={this.state.mouseX} x2={this.state.mouseX} \n              y1={0} y2={height} style={this.getStyle()}\n        />\n        <text \n          x={this.state.mouseX <= width/2 ? this.state.mouseX + 10 : this.state.mouseX - 10} \n          y={height-30} \n          textAnchor = {this.state.mouseX <= width/2 ? \"start\" : \"end\"} \n          style={this.getStyle()}>\n            {`Lap ${currentLap} ${dayOrNight(currentLap)} (${(currentLap*4.16666).toFixed(2)}mi)`}\n        </text>\n        {selectedRunnersInfo\n          .map((info, i) => (\n            <g key={`info-${i}`} style={this.getStyle()}>\n              <circle \n                cx = {info.x} \n                cy = {info.y} \n                fill = {info.color}\n                stroke = {\"black\"} \n                r = {3}\n              />\n              <text \n                x = {info.x + 10} \n                y = {info.y - 10} \n              >\n                {info.string}\n              </text>\n            </g>\n          ))\n        }\n        <rect width={width} height={height} fill=\"none\" pointerEvents=\"all\" \n          onMouseMove = {this.onMouseMove}\n          onMouseOver = {this.onMouseMove} \n          onMouseLeave = {this.onMouseLeave}\n        />\n      </g>\n    )\n  }\n}\n\nexport default CumSumInfoLayer","import React from 'react';\nimport moment from 'moment'\nimport SVGcontainer from './subComponents/SVGcontainer.js'\nimport Axis from './subComponents/Axis.js'\nimport CumSumInfoLayer from './subComponents/CumSumInfoLayer.js'\nimport {line as d3line} from 'd3-shape'\nimport {scaleLinear as d3scaleLinear} from 'd3-scale'\nimport { isSelected, getMax } from '../utils/utils.js'\n\nconst getCumulativeTimesFor = (runner) => runner.laps\n  .reduce((sum, lap) => {\n    const last = sum[sum.length-1],\n          cumRunTime = last.runTime.clone().add(lap.time)\n    return [...sum, { lap: lap.lap,\n                      runTime: cumRunTime,\n                      limitTime: moment.duration(lap.lap*60, \"minutes\"),\n                      restTime: moment.duration(lap.lap*60, \"minutes\").subtract(cumRunTime)\n                    }]\n  }, [{ lap: 0,\n        runTime: moment.duration(),\n        limitTime: moment.duration(),\n        restTime: moment.duration()\n      }\n  ])\n\nconst convertToHours = (d) => ({\n    lap: d.lap,\n    runTime: d.runTime.asHours(),\n    limitTime: d.limitTime.asHours(),\n    restTime: d.restTime.asHours()\n  })\n\n\nconst RunnersCumSumTime = (props) => {\n  const {data, width, height, margins, selectedBibs} = props\n  const innerWidth = width-margins.left-margins.right,\n        innerHeight = height-margins.top-margins.bottom\n\n\n  const runners = []\n  data.forEach(runner => {\n    const isSelectedRunner = isSelected(runner, selectedBibs)\n    if (isSelectedRunner) {\n      runners.push({\n        bib: runner.bib,\n        color: isSelectedRunner,\n        cumSum: getCumulativeTimesFor(runner).map(d => convertToHours(d))\n      })\n    }\n  })\n\n  const max = getMax(data, \"numberOfLaps\")+1\n\n  const timeLoopLimit = [...Array(max)].map((d,i) => i)\n    .map(d => ({lap: d, limitTime: d}))\n\n  const xScale = d3scaleLinear().domain([0, max+1]).range([0, innerWidth]),\n        yScale = d3scaleLinear().domain([0, max+1]).range([innerHeight, 0])\n\n  const lineTime = d3line()\n    .x(d => xScale(d.lap))\n    .y(d => yScale(d.runTime))\n\n  const lineLimit = d3line()\n    .x(d => xScale(d.lap))\n    .y(d => yScale(d.limitTime))\n\n  return (\n    <SVGcontainer width={width} height={height} margins={margins}>\n      <path d={lineLimit(timeLoopLimit)} stroke={\"gray\"} fill=\"None\" strokeDasharray=\"4 2\" />\n      {(runners.length>0) && runners.map(runner => (\n        <path \n          d={lineTime(runner.cumSum)} \n          stroke={runner.color} \n          fill=\"None\" \n          key={`line-${runner.bib}`}\n        />\n      ))}\n      <Axis \n        left = {0}\n        top = {innerHeight}\n        label = {{ left: innerWidth/2 , \n                   top: 30, \n                   text: \"Laps\",\n                   showLabel: true\n                 }}\n        scale = {xScale}\n        orientation = \"bottom\"\n      />\n      <Axis \n        left = {0}\n        top = {0}\n        label = {{ left: -30 , \n                   top: innerHeight/2 , \n                   text: \"Cummulative time\",\n                   showLabel: true\n                 }}\n        scale = {yScale}\n        orientation = \"left\"\n      />\n      <CumSumInfoLayer \n        width = {innerWidth} \n        height = {innerHeight}\n        data = {runners}\n        xScale = {xScale} \n        yScale = {yScale}\n        selectedBibs = {selectedBibs}\n      />\n    </SVGcontainer>\n  );\n}\n\nexport default RunnersCumSumTime","import React from 'react';\nimport SVGcontainer from './subComponents/SVGcontainer.js'\nimport Axis from './subComponents/Axis.js'\nimport { histogram as d3histogram,\n         extent as d3extent,\n         max as d3max,\n         mean as d3mean } from 'd3-array'\nimport { line as d3line,\n         curveBasis as d3curveBasis } from 'd3-shape'\nimport {scaleLinear as d3scaleLinear} from 'd3-scale'\n\n\nimport { isSelected } from '../utils/utils.js'\n\nconst getTimesAsMinutes = (runner) => runner.laps.map(lap => lap.time.asMinutes())\n\n// Kernel density estimation\n// from https://bl.ocks.org/mbostock/4341954\nconst kernelDensityEstimator = (kernel, X) => \n  (V) => X.map(x => \n    [x, d3mean(V, v =>  kernel(x - v))]\n  );\n\nconst  kernelEpanechnikov = (k, f=0.95) => \n  (v) => \n    Math.abs(v /= k) <= 1 ? f * (1 - v * v) / k : 0\n\nconst drawHisto = (bins, xScale, yScale, color, id) => bins.map( (bin, i) => \n  <rect \n    x = {xScale(bin.x0)} \n    y = {yScale(bin.length)} \n    width = {Math.max(0, xScale(bin.x1) - xScale(bin.x0) - 1)}\n    height = {yScale(0) - yScale(bin.length)}\n    fill = {color}\n    opacity = {0.5}\n    key = { `${id}-${i}` }\n  />\n)\n\nconst drawKernelDensity = (data, xScale, yScale, color, line, id) => \n  <path \n    fill={\"none\"}\n    strokeWidth={1.5} \n    stroke={color} \n    d={line(data)}\n    key={`kernel-${id}`} \n  />\n\nconst HistoTime = (props) => {\n  const {data, width, height, margins, selectedBibs} = props\n  const innerWidth = width-margins.left-margins.right,\n        innerHeight = height-margins.top-margins.bottom\n\n  const xScale = d3scaleLinear().range([0, innerWidth]), \n        yScale = d3scaleLinear().range([innerHeight, 0])\n\n  const line = d3line()\n    .curve(d3curveBasis)\n    .x(d => xScale(d[0]))\n    .y(d => yScale(d[1]))\n\n  let binRects = [],\n      allBins = [],\n      allLaps = [],\n      allDensities = []\n\n\n  data.forEach(runner => {\n    const isSelectedRunner = isSelected(runner, selectedBibs)\n    if (isSelectedRunner) {\n      const lapTimes = getTimesAsMinutes(runner)\n\n      allLaps = [...allLaps, ...lapTimes]\n      const extent = d3extent(allLaps)\n      \n      xScale.domain(extent)\n\n      const binsGenerator = d3histogram()\n        .domain(xScale.domain())\n        .thresholds(xScale.ticks(40));\n        \n      const bins = binsGenerator(lapTimes)\n\n      allBins = [...allBins, ...bins]\n      const yScaleMax = d3max(allBins, d => d.length)\n\n      yScale.domain([0, yScaleMax])\n\n\n      const binMaxLength = bins.reduce((acc, curr) => acc >= curr.length ? acc : curr.length, 0)\n\n      const densityData = kernelDensityEstimator(kernelEpanechnikov(2, binMaxLength*(yScaleMax/4)), xScale.ticks(40))(lapTimes);\n\n      const densityKernel = drawKernelDensity(densityData, xScale, yScale, isSelectedRunner, line, `${runner.bib}`)\n      allDensities = [...allDensities, densityKernel]\n\n      binRects = [...binRects, ...drawHisto(bins, xScale, yScale, isSelectedRunner, `r${runner.bib}`)]\n    }\n  })\n\n\n  return (\n    <SVGcontainer width={width} height={height} margins={margins}>\n      <Axis \n        left = {0}\n        top = {innerHeight}\n        label = {{ left: innerWidth/2 , \n                   top: 35, \n                   text: \"Lap time (min)\",\n                   showLabel: true\n                 }}\n        scale = {xScale}\n        orientation = \"bottom\"\n      />\n      <Axis \n        left = {0}\n        top = {0}\n        label = {{ left: -30 , \n                   top: innerHeight/2 , \n                   text: \"Frequency\",\n                   showLabel: true\n                 }}\n        scale = {yScale}\n        orientation = \"left\"\n      />\n      {binRects}\n      {allDensities}\n    </SVGcontainer>\n  );\n}\n\nexport default HistoTime","export class Stack {\n  constructor(startingList = []){\n    this.startingItems = startingList\n    this.items = startingList.slice();\n  }\n\n  push(element){\n    // push element into the items\n    this.items.push(element);\n  }\n\n  pop(){\n    // return top most element in the stack\n    // and removes it from the stack\n    // cycle over starting list if stack is empty\n    if (this.items.length === 0) this.items = this.startingItems.slice()\n    return this.items.pop();\n  }\n\n  peek(){\n    // return the top most element from the stack\n    // but does'nt delete it.\n    return this.items[this.items.length - 1];\n  }\n\n  isEmpty(){\n    // return true if stack is empty\n    return this.items.length === 0;\n  }\n\n  printStack(){\n    return this.items.join(\" \");\n  }\n}","import React, { Component } from 'react';\n\nimport bigsData from './../data/processData'\nimport RaceRosterHexa from './RaceRosterHexa.js'\nimport TimeLinesBrushable from './TimeLinesBrushable.js'\nimport TimeLinesHoverable from './TimeLinesHoverable.js'\nimport RunnersCumSumTime from './RunnersCumSumTime.js'\nimport HistoTime from './HistoTime.js'\nimport {Stack} from './subComponents/Stack.js'\nimport {colorsSelected} from './subComponents/Colors.js'\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      hoveredBib: null,\n      brushedLaps: null,\n      selectedBibs: {}\n    }\n    \n    this.colorStack = new Stack(colorsSelected)\n\n    this.onHoverBib = this.onHoverBib.bind(this)\n    this.onBrushLaps = this.onBrushLaps.bind(this)\n    this.onClickBib = this.onClickBib.bind(this)\n\n  }\n\n  onHoverBib(bib){\n    this.setState({hoveredBib: bib})\n  }\n\n  onClickBib(bib){\n    if (this.state.selectedBibs[`${bib}`]) {\n      // put back color in stack\n      this.colorStack.push(this.state.selectedBibs[`${bib}`])\n      // filter out selected\n      const filtered = Object.keys(this.state.selectedBibs)\n        .filter(key => key !== `${bib}`)\n        .reduce((obj, key) => ({...obj, [key]: this.state.selectedBibs[key]}), {});\n      this.setState({selectedBibs: filtered})\n    } else {\n      const newSelection = {[`${bib}`]: this.colorStack.pop()}\n      this.setState({selectedBibs: {...newSelection, ...this.state.selectedBibs}})\n    }\n  }\n\n  onBrushLaps(lapsRange){\n    this.setState({brushedLaps: lapsRange})\n  }\n\n  render() {\n    return (\n      <div>\n        <RaceRosterHexa\n          runnersData={bigsData.data} \n          hoveredBib = {this.state.hoveredBib} \n          selectedBibs = {this.state.selectedBibs}\n          margins = {{top: 20, right: 20, bottom: 20, left: 20}}\n          width = {300}\n          height = {300}\n          onHover={this.onHoverBib}\n          onClick={this.onClickBib}\n        />\n        <RunnersCumSumTime\n          data = {bigsData.data}\n          margins = {{top: 20, right: 20, bottom: 20, left: 60}}\n          width = {350}\n          height = {300}\n          selectedBibs = {this.state.selectedBibs}\n        />\n        <div style= {{width: \"700px\"}}>\n          <TimeLinesHoverable \n            data = {bigsData.data}\n            width = {700}\n            height = {250}\n            margins = {{top: 30, right: 50, bottom: 20, left: 50}}\n            hoveredBib = {this.state.hoveredBib}\n            selectedBibs = {this.state.selectedBibs}\n            xRange = {this.state.brushedLaps}\n          />\n          <TimeLinesBrushable\n            data = {bigsData.data}\n            width = {700}\n            height = {70}\n            margins = {{top: 0, right: 50, bottom: 35, left: 50}}\n            hoveredBib = {this.state.hoveredBib}\n            selectedBibs = {[]}\n            onBrush = {this.onBrushLaps}\n          />\n        </div>\n        <HistoTime\n          data = {bigsData.data}\n          margins = {{top: 20, right: 20, bottom: 50, left: 60}}\n          width = {350}\n          height = {300}\n          selectedBibs = {this.state.selectedBibs}\n        />\n      </div>\n\n    );\n  }\n}\n\nexport default Dashboard;","import React from 'react';\n\nconst formatTime = (time) => time.format(\"MM/DD/YYYY hh:mm A\")\n\nconst LazWriting = (props) => {\n  const {time, story} = props\n\n  return (\n    <div>\n        <h3>{formatTime(time)}</h3>\n        <div style={{'whiteSpace': 'pre-line', 'margin': '20px'}}>\n          {story}\n        </div>\n      </div>\n  )\n}\n\nexport default LazWriting","import moment from 'moment';\nimport lazData from './lazData.json'\n\nconst data = lazData.data\n\ndata.forEach(entry => \n  entry.time = moment(`${entry.time} CDT`, \"MM-DD-YYYY HH:mm ZZ\")\n)\n\nexport default {\n  data: data\n};\n","import React, { Component } from 'react';\nimport moment from 'moment';\n\nimport HorizontalTimeline from 'react-horizontal-timeline';\nimport SwipeableViews from 'react-swipeable-views';\n\nimport LazWriting from './subComponents/LazWriting.js'\nimport lazData from './../data/processDataLaz.js'\n\nconst timelineConfig = {\n  minEventPadding: 20,\n  maxEventPadding: 120,\n  linePadding: 100,\n  labelWidth: 80,\n  fillingMotionStiffness: 150,\n  fillingMotionDamping: 25,\n  slidingMotionStiffness: 150,\n  slidingMotionDamping: 25,\n  stylesBackground: '#f8f8f8',\n  stylesForeground: '#00BFFF',\n  stylesOutline: '#dfdfdf',\n  isTouchEnabled: true,\n  isKeyboardEnabled: true,\n  isOpenEnding: true,\n  isOpenBeginning: true,\n  getLabel: (date) => {\n    const day = moment(date, 'MM/DD/YYYY hh:mm A').format('MM/DD')\n    const time = moment(date, 'MM/DD/YYYY hh:mm A').format('hh:mm A')\n    return `${day}\\n${time}`\n  }\n}\n\nconst views = lazData.data\n  .map((entry, index) => \n    <LazWriting \n      key = {`prose-${index}`}\n      time = {entry.time}\n      story = {entry.story}\n    />\n  );\n\n\nclass LazBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: lazData.data,\n      item: 0,\n      previous: 0\n    }\n\n  this.onChangeView = this.onChangeView.bind(this)\n  }\n\n  onChangeView(index, previous){\n    this.setState({ \n      item: index, \n      previous: previous || this.state.item \n    })\n  }\n\n  render() {\n    \n    return (\n      <div style={{'display': 'flex', 'justifyContent': 'center'}}>\n        <div style={\n          { display: 'flex', \n            flexDirection: 'column', \n            justifyContent: 'center', \n            alignItems: 'center', \n            width: '90%', \n            marginTop: \"20px\"}\n        }>\n          <div className=\"timelineContainter\" style={{width: '95%', height: '150px'}}>\n            <HorizontalTimeline\n              index={this.state.item}\n              indexClick={this.onChangeView}\n              values={ this.state.data.map(d => d.time.format(\"MM/DD/YYYY hh:mm A\"))}\n              fillingMotion={{ stiffness: timelineConfig.fillingMotionStiffness, damping: timelineConfig.fillingMotionDamping }}\n              isKeyboardEnabled={timelineConfig.isKeyboardEnabled}\n              isTouchEnabled={timelineConfig.isTouchEnabled}\n              labelWidth={timelineConfig.labelWidth}\n              linePadding={timelineConfig.linePadding}\n              maxEventPadding={timelineConfig.maxEventPadding}\n              minEventPadding={timelineConfig.minEventPadding}\n              slidingMotion={{ stiffness: timelineConfig.slidingMotionStiffness, damping: timelineConfig.slidingMotionDamping }}\n              styles={{\n                background: timelineConfig.stylesBackground,\n                foreground: timelineConfig.stylesForeground,\n                outline: timelineConfig.stylesOutline,\n                marginTop: \"100px\"\n              }}\n              isOpenEnding={timelineConfig.isOpenEnding}\n              isOpenBeginning={timelineConfig.isOpenBeginning} \n              getLabel={timelineConfig.getLabel}\n            />\n          </div>\n          <div style={{ width: '95%', height: '100%', marginLeft: 'auto'}}>\n            <SwipeableViews\n              index={this.state.item}\n              onChangeIndex={this.onChangeView}\n              resistance>\n              {views}\n            </SwipeableViews>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LazBoard;","import React, { Component } from 'react';\n\nimport Navbar from 'react-bootstrap/lib/Navbar';\nimport Nav from 'react-bootstrap/lib/Nav';\n\nimport { HashRouter, Route, Switch, Link} from 'react-router-dom'\n\nimport Dashboard from './components/Dashboard.js'\nimport LazBoard from './components/LazBoard.js'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      variable: null\n    }\n  }\n\n  render() {\n    return (\n      <HashRouter>\n        <div>\n          <Navbar collapseOnSelect expand='sm' bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand>BBU</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n                <Nav.Link as={Link} to=\"/laz\">Laz</Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n            <Navbar.Text className='d-none d-sm-block'>\n                Big Backyard Ultra 2017\n              </Navbar.Text>\n          </Navbar>\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/laz' component={LazBoard} />\n          </Switch>\n        </div>\n      </HashRouter>\n    )\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// registerServiceWorker();\n"],"sourceRoot":""}